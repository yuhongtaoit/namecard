<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhongwei.namecard.miniapp.dao.ShopsOrderMapper" >
  <resultMap id="BaseResultMap" type="com.zhongwei.namecard.miniapp.model.ShopsOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uniacid" property="uniacid" jdbcType="INTEGER" />
    <result column="from_user" property="fromUser" jdbcType="VARCHAR" />
    <result column="orderid" property="orderid" jdbcType="VARCHAR" />
    <result column="staffid" property="staffid" jdbcType="INTEGER" />
    <result column="shops_id" property="shopsId" jdbcType="INTEGER" />
    <result column="card_id" property="cardId" jdbcType="INTEGER" />
    <result column="shareid" property="shareid" jdbcType="INTEGER" />
    <result column="tid" property="tid" jdbcType="INTEGER" />
    <result column="transaction_id" property="transactionId" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="all_price" property="allPrice" jdbcType="DECIMAL" />
    <result column="addtime" property="addtime" jdbcType="INTEGER" />
    <result column="shops_num" property="shopsNum" jdbcType="INTEGER" />
    <result column="paid" property="paid" jdbcType="BIT" />
    <result column="hxstatus" property="hxstatus" jdbcType="BIT" />
    <result column="hxname" property="hxname" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="shop_name" property="shopName" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="new_spec" property="newSpec" jdbcType="VARCHAR" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zhongwei.namecard.miniapp.model.ShopsOrder" extends="BaseResultMap" >
    <result column="tp_text" property="tpText" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, uniacid, from_user, orderid, staffid, shops_id, card_id, shareid, tid, transaction_id, 
    price, all_price, addtime, shops_num, paid, hxstatus, hxname, nickname, shop_name, 
    name, phone, new_spec, avatar, address
  </sql>
  <sql id="Blob_Column_List" >
    tp_text
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.zhongwei.namecard.miniapp.model.ShopsOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ims_dbs_masclwlcard_shops_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zhongwei.namecard.miniapp.model.ShopsOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from ims_dbs_masclwlcard_shops_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ims_dbs_masclwlcard_shops_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ims_dbs_masclwlcard_shops_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zhongwei.namecard.miniapp.model.ShopsOrderExample" >
    delete from ims_dbs_masclwlcard_shops_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zhongwei.namecard.miniapp.model.ShopsOrder" >
    insert into ims_dbs_masclwlcard_shops_order (id, uniacid, from_user, 
      orderid, staffid, shops_id, 
      card_id, shareid, tid, 
      transaction_id, price, all_price, 
      addtime, shops_num, paid, 
      hxstatus, hxname, nickname, 
      shop_name, name, phone, 
      new_spec, avatar, address, 
      tp_text)
    values (#{id,jdbcType=INTEGER}, #{uniacid,jdbcType=INTEGER}, #{fromUser,jdbcType=VARCHAR}, 
      #{orderid,jdbcType=VARCHAR}, #{staffid,jdbcType=INTEGER}, #{shopsId,jdbcType=INTEGER}, 
      #{cardId,jdbcType=INTEGER}, #{shareid,jdbcType=INTEGER}, #{tid,jdbcType=INTEGER}, 
      #{transactionId,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, #{allPrice,jdbcType=DECIMAL}, 
      #{addtime,jdbcType=INTEGER}, #{shopsNum,jdbcType=INTEGER}, #{paid,jdbcType=BIT}, 
      #{hxstatus,jdbcType=BIT}, #{hxname,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{shopName,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{newSpec,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{tpText,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zhongwei.namecard.miniapp.model.ShopsOrder" >
    insert into ims_dbs_masclwlcard_shops_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uniacid != null" >
        uniacid,
      </if>
      <if test="fromUser != null" >
        from_user,
      </if>
      <if test="orderid != null" >
        orderid,
      </if>
      <if test="staffid != null" >
        staffid,
      </if>
      <if test="shopsId != null" >
        shops_id,
      </if>
      <if test="cardId != null" >
        card_id,
      </if>
      <if test="shareid != null" >
        shareid,
      </if>
      <if test="tid != null" >
        tid,
      </if>
      <if test="transactionId != null" >
        transaction_id,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="allPrice != null" >
        all_price,
      </if>
      <if test="addtime != null" >
        addtime,
      </if>
      <if test="shopsNum != null" >
        shops_num,
      </if>
      <if test="paid != null" >
        paid,
      </if>
      <if test="hxstatus != null" >
        hxstatus,
      </if>
      <if test="hxname != null" >
        hxname,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="shopName != null" >
        shop_name,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="newSpec != null" >
        new_spec,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="tpText != null" >
        tp_text,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uniacid != null" >
        #{uniacid,jdbcType=INTEGER},
      </if>
      <if test="fromUser != null" >
        #{fromUser,jdbcType=VARCHAR},
      </if>
      <if test="orderid != null" >
        #{orderid,jdbcType=VARCHAR},
      </if>
      <if test="staffid != null" >
        #{staffid,jdbcType=INTEGER},
      </if>
      <if test="shopsId != null" >
        #{shopsId,jdbcType=INTEGER},
      </if>
      <if test="cardId != null" >
        #{cardId,jdbcType=INTEGER},
      </if>
      <if test="shareid != null" >
        #{shareid,jdbcType=INTEGER},
      </if>
      <if test="tid != null" >
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="transactionId != null" >
        #{transactionId,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="allPrice != null" >
        #{allPrice,jdbcType=DECIMAL},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=INTEGER},
      </if>
      <if test="shopsNum != null" >
        #{shopsNum,jdbcType=INTEGER},
      </if>
      <if test="paid != null" >
        #{paid,jdbcType=BIT},
      </if>
      <if test="hxstatus != null" >
        #{hxstatus,jdbcType=BIT},
      </if>
      <if test="hxname != null" >
        #{hxname,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="shopName != null" >
        #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="newSpec != null" >
        #{newSpec,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="tpText != null" >
        #{tpText,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zhongwei.namecard.miniapp.model.ShopsOrderExample" resultType="java.lang.Integer" >
    select count(*) from ims_dbs_masclwlcard_shops_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ims_dbs_masclwlcard_shops_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uniacid != null" >
        uniacid = #{record.uniacid,jdbcType=INTEGER},
      </if>
      <if test="record.fromUser != null" >
        from_user = #{record.fromUser,jdbcType=VARCHAR},
      </if>
      <if test="record.orderid != null" >
        orderid = #{record.orderid,jdbcType=VARCHAR},
      </if>
      <if test="record.staffid != null" >
        staffid = #{record.staffid,jdbcType=INTEGER},
      </if>
      <if test="record.shopsId != null" >
        shops_id = #{record.shopsId,jdbcType=INTEGER},
      </if>
      <if test="record.cardId != null" >
        card_id = #{record.cardId,jdbcType=INTEGER},
      </if>
      <if test="record.shareid != null" >
        shareid = #{record.shareid,jdbcType=INTEGER},
      </if>
      <if test="record.tid != null" >
        tid = #{record.tid,jdbcType=INTEGER},
      </if>
      <if test="record.transactionId != null" >
        transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.allPrice != null" >
        all_price = #{record.allPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.addtime != null" >
        addtime = #{record.addtime,jdbcType=INTEGER},
      </if>
      <if test="record.shopsNum != null" >
        shops_num = #{record.shopsNum,jdbcType=INTEGER},
      </if>
      <if test="record.paid != null" >
        paid = #{record.paid,jdbcType=BIT},
      </if>
      <if test="record.hxstatus != null" >
        hxstatus = #{record.hxstatus,jdbcType=BIT},
      </if>
      <if test="record.hxname != null" >
        hxname = #{record.hxname,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null" >
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.shopName != null" >
        shop_name = #{record.shopName,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.newSpec != null" >
        new_spec = #{record.newSpec,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null" >
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.tpText != null" >
        tp_text = #{record.tpText,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update ims_dbs_masclwlcard_shops_order
    set id = #{record.id,jdbcType=INTEGER},
      uniacid = #{record.uniacid,jdbcType=INTEGER},
      from_user = #{record.fromUser,jdbcType=VARCHAR},
      orderid = #{record.orderid,jdbcType=VARCHAR},
      staffid = #{record.staffid,jdbcType=INTEGER},
      shops_id = #{record.shopsId,jdbcType=INTEGER},
      card_id = #{record.cardId,jdbcType=INTEGER},
      shareid = #{record.shareid,jdbcType=INTEGER},
      tid = #{record.tid,jdbcType=INTEGER},
      transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      all_price = #{record.allPrice,jdbcType=DECIMAL},
      addtime = #{record.addtime,jdbcType=INTEGER},
      shops_num = #{record.shopsNum,jdbcType=INTEGER},
      paid = #{record.paid,jdbcType=BIT},
      hxstatus = #{record.hxstatus,jdbcType=BIT},
      hxname = #{record.hxname,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      shop_name = #{record.shopName,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      new_spec = #{record.newSpec,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      tp_text = #{record.tpText,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ims_dbs_masclwlcard_shops_order
    set id = #{record.id,jdbcType=INTEGER},
      uniacid = #{record.uniacid,jdbcType=INTEGER},
      from_user = #{record.fromUser,jdbcType=VARCHAR},
      orderid = #{record.orderid,jdbcType=VARCHAR},
      staffid = #{record.staffid,jdbcType=INTEGER},
      shops_id = #{record.shopsId,jdbcType=INTEGER},
      card_id = #{record.cardId,jdbcType=INTEGER},
      shareid = #{record.shareid,jdbcType=INTEGER},
      tid = #{record.tid,jdbcType=INTEGER},
      transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      all_price = #{record.allPrice,jdbcType=DECIMAL},
      addtime = #{record.addtime,jdbcType=INTEGER},
      shops_num = #{record.shopsNum,jdbcType=INTEGER},
      paid = #{record.paid,jdbcType=BIT},
      hxstatus = #{record.hxstatus,jdbcType=BIT},
      hxname = #{record.hxname,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      shop_name = #{record.shopName,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      new_spec = #{record.newSpec,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhongwei.namecard.miniapp.model.ShopsOrder" >
    update ims_dbs_masclwlcard_shops_order
    <set >
      <if test="uniacid != null" >
        uniacid = #{uniacid,jdbcType=INTEGER},
      </if>
      <if test="fromUser != null" >
        from_user = #{fromUser,jdbcType=VARCHAR},
      </if>
      <if test="orderid != null" >
        orderid = #{orderid,jdbcType=VARCHAR},
      </if>
      <if test="staffid != null" >
        staffid = #{staffid,jdbcType=INTEGER},
      </if>
      <if test="shopsId != null" >
        shops_id = #{shopsId,jdbcType=INTEGER},
      </if>
      <if test="cardId != null" >
        card_id = #{cardId,jdbcType=INTEGER},
      </if>
      <if test="shareid != null" >
        shareid = #{shareid,jdbcType=INTEGER},
      </if>
      <if test="tid != null" >
        tid = #{tid,jdbcType=INTEGER},
      </if>
      <if test="transactionId != null" >
        transaction_id = #{transactionId,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="allPrice != null" >
        all_price = #{allPrice,jdbcType=DECIMAL},
      </if>
      <if test="addtime != null" >
        addtime = #{addtime,jdbcType=INTEGER},
      </if>
      <if test="shopsNum != null" >
        shops_num = #{shopsNum,jdbcType=INTEGER},
      </if>
      <if test="paid != null" >
        paid = #{paid,jdbcType=BIT},
      </if>
      <if test="hxstatus != null" >
        hxstatus = #{hxstatus,jdbcType=BIT},
      </if>
      <if test="hxname != null" >
        hxname = #{hxname,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="shopName != null" >
        shop_name = #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="newSpec != null" >
        new_spec = #{newSpec,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="tpText != null" >
        tp_text = #{tpText,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zhongwei.namecard.miniapp.model.ShopsOrder" >
    update ims_dbs_masclwlcard_shops_order
    set uniacid = #{uniacid,jdbcType=INTEGER},
      from_user = #{fromUser,jdbcType=VARCHAR},
      orderid = #{orderid,jdbcType=VARCHAR},
      staffid = #{staffid,jdbcType=INTEGER},
      shops_id = #{shopsId,jdbcType=INTEGER},
      card_id = #{cardId,jdbcType=INTEGER},
      shareid = #{shareid,jdbcType=INTEGER},
      tid = #{tid,jdbcType=INTEGER},
      transaction_id = #{transactionId,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      all_price = #{allPrice,jdbcType=DECIMAL},
      addtime = #{addtime,jdbcType=INTEGER},
      shops_num = #{shopsNum,jdbcType=INTEGER},
      paid = #{paid,jdbcType=BIT},
      hxstatus = #{hxstatus,jdbcType=BIT},
      hxname = #{hxname,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      shop_name = #{shopName,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      new_spec = #{newSpec,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      tp_text = #{tpText,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhongwei.namecard.miniapp.model.ShopsOrder" >
    update ims_dbs_masclwlcard_shops_order
    set uniacid = #{uniacid,jdbcType=INTEGER},
      from_user = #{fromUser,jdbcType=VARCHAR},
      orderid = #{orderid,jdbcType=VARCHAR},
      staffid = #{staffid,jdbcType=INTEGER},
      shops_id = #{shopsId,jdbcType=INTEGER},
      card_id = #{cardId,jdbcType=INTEGER},
      shareid = #{shareid,jdbcType=INTEGER},
      tid = #{tid,jdbcType=INTEGER},
      transaction_id = #{transactionId,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      all_price = #{allPrice,jdbcType=DECIMAL},
      addtime = #{addtime,jdbcType=INTEGER},
      shops_num = #{shopsNum,jdbcType=INTEGER},
      paid = #{paid,jdbcType=BIT},
      hxstatus = #{hxstatus,jdbcType=BIT},
      hxname = #{hxname,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      shop_name = #{shopName,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      new_spec = #{newSpec,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>